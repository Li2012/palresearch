heavy debug模式下的附加特色:
・内存地址改变时激活的内存断点。
・CPU log，记录接下来的n个指令到文本文件。
・Heavylog:在程序崩溃或调用intCD时拓下最近的20000个指令到文本文件。
・不同于debug版本，heavydebug不依赖于int3实现断点，因此不能被移去。所以若要用断电，heavydebug是更好的选择。

激活debugger:
要暂停执行并启用调试器，按下pause键即可。dosbox有一个单独的调试窗口，在主程序启动时同步启动。其中显示CPU寄存器当前值(最近被改变的变色)，以16进制和反汇编码(下一条要执行的指令被标以绿色)显示的部分内存内容，以及许多调试信息。
若需要将这些调试信息存入文本文件以备稍后分析，在dosbox.conf的log节利用logfile。

调试键：
・H
显示调试器提供的所有键/命令的参考。
・F5
继续执行
・下
将指令显示下移一条指令
・上
将指令上移一字节。由于dosbox不清楚多字节指令的起始，所以上移可能将反汇编窗口弄得一团糟，直到你找到正确的起始位置。
・R/F
上/下滚动数据视窗。
・D,E,S,X,B
将数据视图移往DS:SI,ES:DI,SS:SP,DS:DX,ES:BX
・V
启用/停止DOSBOX根据寄存器当前值推断并显示在指令一侧的附加讯息。
・1,2,3,4,5
执行100,500,1000,5000,10000个CPU周期然后返回调试模式。
・T
引起时钟中断
・F9
在当前行设断点(该行标红)
・F10
逐行调试(遇函数调用不跟入)
・F11
溯踪逐行调试
・回车
开启命令模式，参见下节

调试命令：
命令的输入依赖于回车出现的命令行，再按一次回车执行。
・BP [段址]:[偏移量]
在给定地址设断点。
・BPINT [中断号] [ah值]
设置在给定中断号和AH值的中断发生时激活的断点。若AH值不重要，写*即可。
・BPLIST
输出当前所有断点。
・BPDEL [断点号]
删除单个断点(使用BPLIST给出的断点号)或所有断点。
・C/D [段址]:[偏移量]
跳到指定的代码/数据位置察看。
・INT [中断号]
执行中断。终端执行完毕后将返回执行(除非之前引发了一个断点)。
・INTT [中断号]
工作模式几同于INT,唯返回于调试模式。
・SR [寄存器] [值]
设置寄存器或标志(使用af,cf,df,……)
・SM [段址]:[偏移量] [值1] [值2] [值……]
设置指定位置开始的连续内存为指定值。
・IV [段址]:[偏移量] [名称]
设置变量名。反汇编器将之后所有对该内存地址的引用替换为[名称]。
・SV/LV [文件名]
保存/加载由IV命名的所有变量。
・MEMDUMP [段址]:[偏移量] [长度]
拓下指定内存内容到memdump.txt。
・SELINFO CS/DS/ES/FS/GS/SS/[段址]
返回给出的寄存器指向的段描述符信息。也可以直接用任意的段址(16进制)。
・GDT/LDT/IDT
输出全局/当前/中断描述符表。
・INTVEC
输出所有实模式中断向量(定位于0000:0000)的列表到文件。
・INTHAND [中断号]
将代码视图调到给出的中断的实模式中断程序的起始。

下列命令只在HEAVY_DEBUG版中起作用。
・LOG [数目]
执行[数目]个CPU周期并将这些命令和寄存器值记录到logcpu.txt。注意：该命令将极大地拖慢DOSBOX!
・BPM [段址]:[偏移量]
设置在给定内存位置的内容变动时激活的断点。注意：新断点将假设给定位置的当前值是0x00。所以若不是这样，马上就会得到一个“memory has changed from 00 to ??”的中断消息，即使内存实际上没变。
・BPPM [段描述符]:[偏移量]
类似BPM，但在保护模式内存中使用。
・BPLM [线性地址]
类似BPM，但在线性地址空间中使用。
・HEAVYLOG
启动或禁止重型CPU活动记录。DOSBOX将启动对最近20000个CPU周期内所有命令相关信息的记录。若有intCD发生(在调试器里即可使用int CD),或在严重错误后DOSBOX仍存留，则将如上信息拓入LOGCPU_INT_CD.TXT。对寻找DOSBOX在某点崩溃的原因非常有用。但与LOG类似，启动HEAVYLOG后DOSBOX的运行将显著放慢。